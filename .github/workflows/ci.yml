name: CI/CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  build_amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate application-security.yml
        run: echo "${{ secrets.APPLICATION_SECURITY }}" > ./assignment-2/src/main/resources/application-security.yml
      - name: Generate application-mail.yml
        run: echo "${{ secrets.APPLICATION_MAIL }}" > ./assignment-2/src/main/resources/application-mail.yml
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./assignment-2
          push: true
          tags: ${{ AMD64_DOCKER_IMAGE_TAG }}
          platforms: linux/amd64

  build_arm64:
    runs-on: [self-hosted, linux, ARM64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate application-security.yml
        run: echo "${{ secrets.APPLICATION_SECURITY }}" > ./assignment-2/src/main/resources/application-security.yml
      - name: Generate application-mail.yml
        run: echo "${{ secrets.APPLICATION_MAIL }}" > ./assignment-2/src/main/resources/application-mail.yml
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Cleanup Storage
        run: |
          docker system prune -f -a --volumes
      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./assignment-2
          push: true
          tags: ${{ ARM64_DOCKER_IMAGE_TAG }}
          platforms: linux/arm64

  merge_multi_arch_images:
    runs-on: ubuntu-latest
    needs: [build_amd64, build_arm64]
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Merge images
        run: |
          docker buildx imagetools create -t ${{ DOCKER_IMAGE_TAG }} ${{ ARM64_DOCKER_IMAGE_TAG }} ${{ AMD64_DOCKER_IMAGE_TAG }}
